<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Geoff&#39;s place of science and cybersec stuff</title>
    <link>https://galitz.github.io/posts/</link>
    <description>Recent content in Posts on Geoff&#39;s place of science and cybersec stuff</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 08 Jan 2021 15:01:59 +0000</lastBuildDate><atom:link href="https://galitz.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Credential Recovery Secret Questions</title>
      <link>https://galitz.github.io/posts/cred-recovery-secret-question/</link>
      <pubDate>Fri, 08 Jan 2021 15:01:59 +0000</pubDate>
      
      <guid>https://galitz.github.io/posts/cred-recovery-secret-question/</guid>
      <description>Something often missed in security awareness training for users and customers is the account recovery secret question issue. The issue here is that if people treat them like &amp;ldquo;real questions,&amp;rdquo; and therefore answer honestly it can end up putting their account at risk.
Consider a common recovery question: &amp;ldquo;What was the name of your first pet?&amp;rdquo; How many &amp;ldquo;Mr Socks&amp;rdquo; could there be in the universe? Well, it turns out quite a few.</description>
    </item>
    
    <item>
      <title>Credential hunting with gitleaks</title>
      <link>https://galitz.github.io/posts/gitleaks_1/</link>
      <pubDate>Sun, 03 Jan 2021 09:23:14 +0000</pubDate>
      
      <guid>https://galitz.github.io/posts/gitleaks_1/</guid>
      <description>Credential hunting is relevant to anyone in the infosec/cybersecurity space.
I&amp;rsquo;ll spare you the long and probably unneeed introduction you get on most blogs and websites. Let&amp;rsquo;s just say that if you commit login credentials to your code or data repositories in plaintext, it is only a matter of time before they are found by malicious actors and used against you.
So&amp;hellip; what to do?
Under the assumption there may already be credentials from the past in your repositories and sometime in the future some might accidentally get commited, the thing to do is scan for them on a regular basis.</description>
    </item>
    
    <item>
      <title>Threat hunting with splunk: sorting by IP</title>
      <link>https://galitz.github.io/posts/threat_hunting_2/</link>
      <pubDate>Tue, 29 Dec 2020 09:23:14 +0000</pubDate>
      
      <guid>https://galitz.github.io/posts/threat_hunting_2/</guid>
      <description>Following up on a previous post on splunk and threat hunting, let&amp;rsquo;s go a step further. We demonstrated a query to show us attempted logins against joomla admin page. We saw what the attempted credentials were, but this resulted in so many lines of output that we couldn&amp;rsquo;t easily compile a list of IPs that we could identify as malicious.
Here is the original query we talked about:
index=botsv1 earliest=0 http_method=POST uri=&amp;#34;/joomla/administrator/index.</description>
    </item>
    
    <item>
      <title>Threat hunting with splunk: simple credential attacks</title>
      <link>https://galitz.github.io/posts/splunk-botsv1-joomla-admin-example/</link>
      <pubDate>Tue, 15 Sep 2020 12:22:58 +0000</pubDate>
      
      <guid>https://galitz.github.io/posts/splunk-botsv1-joomla-admin-example/</guid>
      <description>Over in my useful_snippets repo, I just added a neat little example:
index=botsv1 earliest=0 http_method=POST uri=&amp;#34;/joomla/administrator/index.php&amp;#34; site=&amp;#34;imreallynotbatman.com&amp;#34; src_ip=&amp;#34;23.22.63.114&amp;#34; | table timestamp,form_data It uses the botsv1 example dataset (provided by splunk), searches the entire history of the dataset for specified URL and sie. It then creates a table with timestamp and the form data as passed in by the browser. This is an example, but you can build off it to manually inspect what users and passwords are being targetted by malicious actors.</description>
    </item>
    
    <item>
      <title>Useful snippets and one-liners</title>
      <link>https://galitz.github.io/posts/useful-links/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://galitz.github.io/posts/useful-links/</guid>
      <description>Here is a link to some useful code/cli snippets and one-liners for various situations:
Useful Snippets</description>
    </item>
    
  </channel>
</rss>
